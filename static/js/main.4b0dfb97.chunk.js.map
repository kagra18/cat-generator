{"version":3,"sources":["CatModel.js","CatMain.js","serviceWorker.js","index.js"],"names":["getAllBreeds","Promise","resolve","reject","fetch","getBreedsBaseUrl","then","response","json","data","console","log","catch","error","getRandomFact","getRandomImage","getBreedExtendedBaseUrl","method","headers","getBreedsWithDetails","CatMain","props","changeHandler","target","setState","selectedBreed","value","selected","toLowerCase","replace","trim","setBreedId","breedId","state","breedsWithDetails","filter","breed","name","id","clickHandler","currentClick","buttonTitles","clearCurrentStates","currentView","viewTitles","submitHandler","event","preventDefault","alert","getBreedDetails","randomFact","randomImage","generateFactAndImage","breedDetailsView","wikiUrl","breedInfo","wikipedia_url","href","rel","className","src","url","alt","country","origin","pattern","coat","temperament","description","type","onClick","allBreedsView","startIndex","onSubmit","onChange","key","breedName","disabled","allBreeds","map","cat","loadView","currentExtraDetails","this","stateToSet","obj","Object","assign","entries","keys","length","breeds","setBreedStates","all","responses","Array","isArray","fact","view","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4b0dfb97.chunk.js","sourcesContent":["\"use strict\";\n\n// Karl Grauers\n// ak2786\n\n\nfunction getBreedsBaseUrl() {\n    return \"https://catfact.ninja\";\n}\n\n\nfunction getBreedExtendedBaseUrl() {\n    return \"https://api.thecatapi.com/v1\";\n}\n\nfunction getCatApiKey() {\n    return \"7e01e831-ca0a-4115-89e0-3d7870d05b08\";\n}\n\n\n\n\nexport const getAllBreeds = new Promise ((resolve, reject) => {\n    const url = getBreedsBaseUrl() + \"/breeds?limit=100\";\n    fetch(url)\n    .then((response) => response.json())\n    .then(data => {\n        console.log(data.data);\n        resolve(data);\n    })\n    .catch((error) => {\n        console.log(\"Error: \", error)\n    });\n});\n\n\nexport const getRandomFact = () => {\n    return new Promise ((resolve, reject) => {\n    const url = getBreedsBaseUrl() + \"/fact?max_length=140\";\n\n        return fetch(url)\n        .then((response) => {\n            return response.json()\n        })\n        .then(data => {\n            console.log(data);\n            resolve(data);\n        })\n        .catch((error) => {\n            console.log(\"Error: \", error)\n        });\n    });\n}\n\nexport const getRandomImage = () => {\n    return new Promise ((resolve, reject) => {\n    const url = getBreedExtendedBaseUrl() + \"/images/search?mime_types=png,jpg\";\n\n        return fetch(url, {\n            method: \"GET\",\n            headers: {\n                'Cache-Control': 'no-store',\n                \"x-api-key\": getCatApiKey()\n            }\n        })\n        .then((response) => {\n            return response.json()\n        })\n        .then(data => {\n            console.log(data);\n            resolve(data);\n        })\n        .catch((error) => {\n            console.log(\"Error: \", error)\n        });\n    });\n}\n\n\n\nexport const getBreedsWithDetails = new Promise ((resolve, reject) => {\n    const url = getBreedExtendedBaseUrl() + \"/breeds\";\n    fetch(url, {\n        method: \"GET\",\n        headers: {\n            \"x-api-key\": getCatApiKey()\n        }\n    })\n    .then((response) => response.json())\n    .then(data => {\n        console.log(data);\n        resolve(data);\n    })\n    .catch((error) => {\n        console.log(\"Error: \", error)\n    });\n});\n\n\n\nexport const getExtraBreedDetails = (breedId) => {\n    return new Promise ((resolve, reject) => {\n        const url = getBreedExtendedBaseUrl()\n            + \"/images/search?breed_ids=\" + breedId;\n        fetch(url, {\n            method: \"GET\",\n            headers: {\n                \"x-api-key\": getCatApiKey()\n            }\n        })\n        .then((response) => response.json())\n        .then(data => {\n            console.log(data);\n            resolve(data);\n        })\n        .catch((error) => {\n            console.log(\"Error: \", error)\n        });\n    });\n}\n","\"use strict\";\n\n// Karl Grauers\n// ak2786\n\n\nimport React, { Component } from 'react';\nimport {getAllBreeds, getBreedsWithDetails,\n     getExtraBreedDetails, getRandomFact,\n    getRandomImage} from './CatModel.js';\n\n\nclass CatMain extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\n            selectedBreed: \"\",\n            breedId: \"\",\n            breedName: \"\",\n            randomFact: \"\",\n            randomImage: \"\",\n\n            currentClick: \"\",\n            currentView: \"loading\",\n            allBreeds: [\"No breeds\"],\n            breedsWithDetails: [],\n\n            currentExtraDetails: {},\n            breedInfo: {}\n        };\n\n    }\n\n\n    viewTitles() {\n        return [\"allBreeds\", \"breedDetails\", \"loading\"];\n    }\n\n\n    buttonTitles() {\n        return [\"Get breed info\", \"<<< Back\", \"Get random fact/picture\"];\n    }\n\n\n\n    changeHandler = ({target}) => {\n        this.setState({selectedBreed: target.value});\n        const selected = target.value.toLowerCase().replace(\" \", \"\").trim();\n\n        this.setBreedId(selected)\n    }\n\n\n    setBreedId = (selected) => {\n        this.setState({breedId: \"\"})\n        this.state.breedsWithDetails.filter(breed => {\n            if(breed.name.toLowerCase().replace(\" \", \"\").trim() === selected){\n                return this.setState({breedId: breed.id})\n            }\n            return null;\n        })\n    }\n\n\n\n\n    setBreedStates() {\n        this.setState({breedInfo: {}})\n        const notAvailable = \"Not available\";\n        var stateToSet = {};\n\n        this.state.allBreeds.filter(obj => {\n            if(this.state.selectedBreed.toLowerCase().replace(\" \", \"\").trim()\n            === obj.breed.toLowerCase().replace(\" \", \"\").trim()){\n                return Object.assign(stateToSet, obj)\n\n            }\n            return null;\n        });\n\n            for (let [key, value] of Object.entries(stateToSet)) {\n                if(value === \"\") {\n                    stateToSet[key] = notAvailable;\n                } else {\n                    stateToSet[key] = value\n                }\n            }\n\n        if(Object.keys(this.state.currentExtraDetails).length === 0) {\n            stateToSet.description = notAvailable;\n            stateToSet.temperament = notAvailable;\n            stateToSet.wikipedia_url = notAvailable;\n            stateToSet.url = \"https://upload.wikimedia.org/wikipedia/commons/1/15/No_image_available_600_x_450.svg\"\n        } else {\n            stateToSet.description = this.state.currentExtraDetails.breeds[0].description;\n            stateToSet.temperament = this.state.currentExtraDetails.breeds[0].temperament;\n            stateToSet.wikipedia_url = this.state.currentExtraDetails.breeds[0].wikipedia_url;\n            stateToSet.url = this.state.currentExtraDetails.url;\n        }\n\n        this.setState({breedInfo: stateToSet});\n        this.setState({currentView: this.viewTitles()[1]});\n    }\n\n    getBreedDetails() {\n        this.setState({breedInfo: {}, currentExtraDetails: {}})\n\n        if(this.state.breedId !== \"\") {\n            getExtraBreedDetails(this.state.breedId).then(response => {\n                this.setState({\n                    currentExtraDetails: response[0]\n                });\n                this.setBreedStates();\n            })\n            .catch((error) => {\n                console.log(\"Error: \", error)\n            });\n            return;\n        }\n        this.setBreedStates();\n    }\n\n\n    clickHandler = ({target}) => {\n        this.setState({currentClick: target.value});\n        if(target.value === this.buttonTitles()[1]) {\n            this.clearCurrentStates();\n            this.setState({currentView: this.viewTitles()[0]})\n        }\n    }\n\n\n    clearCurrentStates() {\n        this.setState({selectedBreed: \"\",\n            breedId: \"\", breedName: \"\",\n            currentClick: \"\",\n            currentExtraDetails: {},\n            breedInfo: {}})\n    }\n\n    componentDidMount() {\n        Promise.all([getAllBreeds, getBreedsWithDetails,\n            getRandomFact(), getRandomImage()]).then(responses => {\n            return responses.map(response => {\n                if(Array.isArray(response)) {\n                    if(response.length > 1) {\n                        this.setState({\n                            breedsWithDetails: response\n                        });\n                    } else {\n                        this.setState({\n                            randomImage: response[0].url\n                        });\n                    }\n                } else {\n                    if(Object.keys(response).length > 3) {\n                        this.setState({\n                            allBreeds: response.data\n                        });\n                    } else {\n                        this.setState({\n                            randomFact: response.fact\n                        });\n                    }\n                }\n                return this.setState({\n                    currentView: this.viewTitles()[0],\n                });\n            })\n        })\n        .catch((error) => {\n            console.log(\"Error: \", error);\n        });\n    }\n\n\n\n\n\n    generateFactAndImage() {\n        Promise.all([getRandomFact(), getRandomImage()]).then(responses => {\n             responses.map(response => {\n                if(Array.isArray(response)) {\n                    this.setState({\n                        randomImage: response[0].url\n                    });\n                } else {\n                    this.setState({\n                        randomFact: response.fact\n                    });\n                }\n                return null;\n            })\n        })\n        .catch((error) => {\n            console.log(\"Error: \", error)\n        })\n    }\n\n\n    submitHandler = (event) => {\n        event.preventDefault();\n        if(this.state.currentClick === this.buttonTitles()[0]) {\n            if(this.state.selectedBreed === \"\") {\n                alert(\"You must pick a breed!\")\n                return;\n            }\n            this.getBreedDetails();\n        } else if(this.state.currentClick === this.buttonTitles()[2]) {\n            this.setState({randomFact: \"\", randomImage: \"\",});\n            this.generateFactAndImage();\n        }\n    }\n\n\n    breedDetailsView = () => {\n        let wikiUrl;\n\n        if(this.state.breedInfo.wikipedia_url === \"Not available\") {\n            wikiUrl = <span>{this.state.breedInfo.wikipedia_url}</span>\n        } else {\n            wikiUrl = <a href={this.state.breedInfo.wikipedia_url} target=\"_blank\" rel=\"noopener noreferrer\">\n            {this.state.breedInfo.wikipedia_url}</a>\n        }\n\n        return <ul className=\"details-style-1\">\n        <img src={this.state.breedInfo.url} className=\"image-margin-bottom\" alt={this.state.breedInfo.breed} />\n        <h1 className=\"main-header-left\"> {this.state.breedInfo.breed}</h1>\n            <li>\n                <label>Country of origin: </label><span>{this.state.breedInfo.country}</span>\n            </li>\n            <li>\n                <label>Breed origin: </label><span>{this.state.breedInfo.origin}</span>\n            </li>\n            <li>\n                <label>Color pattern: </label><span>{this.state.breedInfo.pattern}</span>\n            </li>\n            <li>\n                <label>Type of fur: </label><span>{this.state.breedInfo.coat}</span>\n            </li>\n            <li>\n                <label>Temper: </label><span>{this.state.breedInfo.temperament}</span>\n            </li>\n            <li>\n                <label>Description: </label><span>{this.state.breedInfo.description}</span>\n            </li>\n            <li>\n                <label>{this.state.breedInfo.breed} on wiki: </label>\n                    {wikiUrl}\n            </li>\n            <li>\n                <input className=\"grey-color space-right\"\n                type=\"submit\"\n                value={this.buttonTitles()[1]}\n                onClick={this.clickHandler}\n                />\n            </li>\n        </ul>\n    }\n\n\n\n    allBreedsView = () => {\n        let startIndex = 0;\n\n        return <form onSubmit={this.submitHandler}>\n            <h1 className=\"main-header-center\">The cat generator: Breed info and random pics!</h1>\n                <ul className=\"form-style-1\">\n                    <img src={this.state.randomImage} alt=\"Cat\" />\n\n                    <li>\n                        <label>Random cat fact </label><span>{this.state.randomFact}</span>\n                    </li>\n                    <li>\n                        <input className=\"space-right\"\n                        type=\"submit\"\n                        value={this.buttonTitles()[2]}\n                        onClick={this.clickHandler}\n                        />\n                    </li>\n                    <hr />\n                    <li>\n                        <label>Get facts about a certain breed:</label>\n                        <select value={this.state.selectedBreed} className=\"field-select\"\n                            onChange={this.changeHandler}>\n                            <option key={startIndex} value={this.state.breedName}\n                                disabled >Select a breed...</option>\n                            {this.state.allBreeds.map((cat) => <option key={startIndex++}\n                                value={cat.breed} > {cat.breed} </option>)}\n                        </select>\n                    </li>\n                    <li>\n                        <input className=\"space-right\"\n                        type=\"submit\"\n                        value={this.buttonTitles()[0]}\n                        onClick={this.clickHandler}\n                        />\n                    </li>\n                </ul>\n            </form>\n        }\n\n        loadView = () => {\n            return <div>\n                    <h1 className=\"main-header-center\">Loading cat generator...</h1>\n                </div>\n        }\n\n\n        render() {\n            let view = \"\";\n\n            if(this.state.currentView === this.viewTitles()[0]) {\n                view = this.allBreedsView();\n            } else if(this.state.currentView === this.viewTitles()[1]) {\n                view = this.breedDetailsView();\n            } else if(this.state.currentView === this.viewTitles()[2]) {\n                view = this.loadView();\n            }\n\n            return (\n                view\n            );\n        }\n    }\n\n    export default CatMain;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\"use strict\";\n\n// Karl Grauers\n// ak2786\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport CatMain from './CatMain';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<CatMain />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}